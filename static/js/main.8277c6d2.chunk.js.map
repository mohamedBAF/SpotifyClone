{"version":3,"sources":["logo.svg","spotify.js","Login.js","Sidebar_option.js","DataLayer.js","Sidebar.js","Header.js","SongRow.js","body.js","Footer.js","player.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["module","exports","loginUrl","join","Login","console","log","window","location","hash","className","src","alt","href","Sidebar_option","title","Icon","DataLayerContext","createContext","DataLayer","reducer","initialState","children","Provider","value","useReducer","useDataLayerValue","useContext","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","playlist","name","Header","user","token","placeholder","type","Avatar","images","url","display_name","SongRow","track","playSong","onClick","id","album","artists","artist","Body","spotify","discover_weekly","dispatch","play","uris","then","res","getMyCurrentPlayingTrack","r","item","playing","description","context_uri","fontSize","tracks","Footer","useEffect","getMyCurrentPlaybackState","is_playing","handlePlayPause","pause","skipToNext","skipToPrevious","Grid","container","spacing","xs","Slider","aria-labelledby","player","App","SpotifyWebApi","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","getPlaylist","response","getMyTopArtists","top_artists","getUserPlaylists","Boolean","hostname","match","state","action","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8277c6d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\nexport const authEndpoint=\"https://accounts.spotify.com/authorize\"\r\nconst redirectUri=\"http://localhost:3000/\"\r\nconst clientId=\"0b8792d5ff6348c28d70c405c123814d\"\r\n\r\nconst scopes=[\r\n\"user-read-currently-playing\",\r\n\"user-read-recently-played\",\r\n\"user-read-playback-state\",\r\n\"user-top-read\",\r\n\"user-modify-playback-state\",\r\n];\r\n\r\nexport const getTokenFromUrl =()=>{\r\n    return window.location.hash.\r\n    substring(1)\r\n    .split(\"&\")\r\n    .reduce((initial,item)=>{\r\n        var parts=item.split(\"=\")\r\n        initial[parts[0]]=decodeURIComponent(parts[1])\r\n        return initial\r\n\r\n    },{})\r\n   \r\n}\r\nexport const loginUrl=`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`;","import React from 'react';\r\nimport './Login.css';\r\nimport {loginUrl} from './spotify'\r\n\r\nconst Login = () => {\r\n    console.log(window.location.hash)\r\n    return (\r\n        <div className=\"login\">\r\n            <img src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" \r\n            alt=\"\"/>\r\n            {/* spotify Logo */}\r\n            {/* login with spot butoon  */}\r\n           <a href={loginUrl}>LOGIN WITH SPOTIFY </a>\r\n           <nav>\r\n  <ul>\r\n    <li>\r\n      home\r\n      <span></span><span></span><span></span><span></span>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport './Sidebar_option.css'\r\n\r\nfunction Sidebar_option ({title,Icon})  {\r\n    return (\r\n        <div className=\"sidebaroption\">\r\n            {Icon && <Icon className=\"sidebaroption_icon\" />}\r\n            {Icon ? <h4>{title}</h4> : <p>{title}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar_option;\r\n","\r\nimport React, { createContext, useContext, useReducer } from 'react';\r\n\r\nexport const DataLayerContext = createContext();\r\n\r\nexport const DataLayer = ({ reducer, initialState, children }) => (\r\n  <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </DataLayerContext.Provider>\r\n);\r\n\r\nexport const useDataLayerValue = \r\n() => useContext(DataLayerContext)\r\n","import React from 'react';\r\nimport './sidebar.css'\r\nimport Sidebar_option from './Sidebar_option';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\r\nimport  { useDataLayerValue } from './DataLayer';\r\n\r\n\r\n\r\n\r\nfunction Sidebar ()  {\r\nconst [{playlists},dispatch] = useDataLayerValue();\r\nconsole.log(playlists)\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <img\r\n            className=\"sidebar_logo\" \r\n            src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"/>\r\n\r\n\r\n          <Sidebar_option  Icon={HomeIcon} title=\"Home\"/>\r\n          <Sidebar_option   Icon={SearchIcon} title=\"Search\"/>\r\n          <Sidebar_option   Icon={LibraryMusicIcon} title=\"Your Library\"/>\r\n          <br/>\r\n          \r\n<strong className=\"sidebar_title\">PLAYLISTS</strong>\r\n<hr/>\r\n\r\n\r\n\r\n{playlists?.items?.map((playlist) =>(\r\n    <Sidebar_option    title={playlist.name}/>    \r\n    )) }\r\n\r\n<Sidebar_option    title=\"Hip hop\"/>\r\n<Sidebar_option    title=\"Rock\"/>\r\n<Sidebar_option    title=\"RnB\"/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport {useDataLayerValue} from './DataLayer'\r\n\r\nfunction Header  ()  {\r\n    const [{user,token,playlists},dispatch]=useDataLayerValue()\r\n    return (\r\n        <div className=\"header\">\r\n        <div className=\"header__left\">\r\n          <SearchIcon />\r\n          <input\r\n            placeholder=\"Search for Artists, Songs, or Podcasts \"\r\n            type=\"text\"\r\n          />\r\n        </div>\r\n        <div className=\"header__right\">\r\n          <Avatar alt=\"\" src={user?.images[0]?.url} />\r\n    <h4>{user?.display_name}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './SongRow.css'\r\nfunction SongRow  ({track,playSong})  {\r\n    return (\r\n        <div className=\"songRow\" onClick={() => playSong(track.id)}>\r\n            <img className=\"songRow_album\" src={track.album.images[0].url}/>\r\n            <div className=\"songRow_info\">\r\n    <h1>{track.name}</h1>\r\n<p>\r\n{track.artists.map((artist) => artist.name).join(\", \")}\r\n{track.album.name}\r\n</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SongRow;\r\n","import React from \"react\";\r\nimport \"./body.css\";\r\nimport Header from \"./Header\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport SongRow from './SongRow'\r\n\r\n\r\nexport default function Body({ spotify}) {\r\n  \r\n  const [{ discover_weekly }, dispatch] = useDataLayerValue();\r\n  console.log(discover_weekly);\r\n  const playPlaylist = (id) => {\r\n    spotify\r\n      .play({\r\n        context_uri: `spotify:playlist:6bHi7io5Tgl8GXofNYnAvx`,\r\n      })\r\n      .then((res) => {\r\n        spotify.getMyCurrentPlayingTrack().then((r) => {\r\n          dispatch({\r\n            type: \"SET_ITEM\",\r\n            item: r.item,\r\n          });\r\n          dispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  const playSong = (id) => {\r\n    spotify\r\n      .play({\r\n        uris: [`spotify:track:${id}`],\r\n      })\r\n      .then((res) => {\r\n        spotify.getMyCurrentPlayingTrack().then((r) => {\r\n          dispatch({\r\n            type: \"SET_ITEM\",\r\n            item: r.item,\r\n          });\r\n          dispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"body\">\r\n      <Header spotify={spotify} />\r\n      <div className=\"body_info\">\r\n        <img src={discover_weekly?.images[0].url} alt=\"\" />\r\n        <div className=\"body_infoText\">\r\n          <strong>Playlist</strong>\r\n          <h2>Discover Weekly</h2>\r\n          <p>{discover_weekly?.description}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"body_songs\">\r\n<div className=\"body_icons\">\r\n<PlayCircleFilledIcon \r\nclassName=\"body_shuffle\"\r\nonClick={playPlaylist}\r\n/>\r\n<FavoriteIcon fontSize=\"large\"/>\r\n<MoreHorizIcon/>\r\n\r\n</div>\r\n       {discover_weekly?.tracks?.items.map(item=>(\r\n\r\n<SongRow \r\nplaySong={playSong}\r\ntrack={item.track}/>\r\n       ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","\r\nimport './Footer.css'\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport {Slider,Grid} from '@material-ui/core';\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\nfunction Footer  ({ spotify }) {\r\n\r\n  const [{ token, item, playing }, dispatch] = useDataLayerValue();\r\n\r\n  useEffect(() => {\r\n  spotify.getMyCurrentPlaybackState().then((r) => {\r\n    console.log(r);\r\n\r\n    dispatch({\r\n      type: \"SET_PLAYING\",\r\n      playing: r.is_playing,\r\n    });\r\n\r\n    dispatch({\r\n      type: \"SET_ITEM\",\r\n      item: r.item,\r\n    });\r\n  });\r\n}, [spotify]);\r\n\r\nconst handlePlayPause = () => {\r\n  if (playing) {\r\n    spotify.pause();\r\n    dispatch({\r\n      type: \"SET_PLAYING\",\r\n      playing: false,\r\n    });\r\n  } else {\r\n    spotify.play();\r\n    dispatch({\r\n      type: \"SET_PLAYING\",\r\n      playing: true,\r\n    });\r\n  }\r\n};\r\n\r\nconst skipNext = () => {\r\n  spotify.skipToNext();\r\n  spotify.getMyCurrentPlayingTrack().then((r) => {\r\n    dispatch({\r\n      type: \"SET_ITEM\",\r\n      item: r.item,\r\n    });\r\n    dispatch({\r\n      type: \"SET_PLAYING\",\r\n      playing: true,\r\n    });\r\n  });\r\n};\r\n\r\nconst skipPrevious = () => {\r\n  spotify.skipToPrevious();\r\n  spotify.getMyCurrentPlayingTrack().then((r) => {\r\n    dispatch({\r\n      type: \"SET_ITEM\",\r\n      item: r.item,\r\n    });\r\n    dispatch({\r\n      type: \"SET_PLAYING\",\r\n      playing: true,\r\n    });\r\n  });\r\n};\r\n\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer_left\">\r\n<img className=\"footer_albumLogo\" src={item?.album.images[0].url} alt={item?.name}/>\r\n{item ? (\r\n          <div className=\"footer_songInfo\">\r\n            <h4>{item.name}</h4>\r\n            <p>{item.artists.map((artist) => artist.name).join(\", \")}</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"footer_songInfo\">\r\n            <h4>No song is playing</h4>\r\n            <p>...</p>\r\n          </div>\r\n        )}\r\n\r\n\r\n            </div>\r\n\r\n            \r\n            <div className=\"footer_center\">\r\n          <ShuffleIcon className=\"footer_green\"/>\r\n          <SkipPreviousIcon className=\"footer_icon\" \r\n           onClick={skipNext}\r\n          />\r\n          {playing ? (\r\n          <PauseCircleOutlineIcon\r\n            onClick={handlePlayPause}\r\n            fontSize=\"large\"\r\n            className=\"footer_icon\"\r\n          />\r\n        ) : (\r\n          <PlayCircleOutlineIcon\r\n            onClick={handlePlayPause}\r\n            fontSize=\"large\"\r\n            className=\"footer_icon\"\r\n          />\r\n        )}\r\n        <SkipNextIcon onClick={skipPrevious} className=\"footer_icon\" />\r\n        <RepeatIcon className=\"footer_green\" />\r\n            </div>\r\n\r\n            \r\n            <div className=\"footer_right\">\r\n            <Grid container spacing={2}>\r\n        <Grid item>\r\n          <PlaylistPlayIcon/>\r\n        </Grid>\r\n        <Grid item>\r\n        <VolumeDownIcon/>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Slider aria-labelledby=\"continuous-slider\"/>\r\n        </Grid>\r\n        </Grid>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./player.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Body from \"./body\";\r\nimport Footer from \"./Footer\";\r\n\r\nfunction player({ spotify, discover_weekly }) {\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"player_body\">\r\n        <Sidebar />\r\n        <Body spotify={spotify} discover_weekly={discover_weekly} />\r\n      </div>\r\n      <Footer spotify={spotify}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default player;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Login from './Login'\nimport {getTokenFromUrl} from './spotify'\nimport { useEffect,useState } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from './player';\nimport  { useDataLayerValue } from './DataLayer';\n\n\nfunction App() {\n\n  const [{user,token,playlists,discover_weekly },dispatch]=useDataLayerValue()\n  \n  const spotify = new SpotifyWebApi()\n  \n  useEffect(() => {\n    \n  const hash =getTokenFromUrl()\n  //console.log(\"access token\",token)\n  window.location.hash=\"\"\n  const _token = hash.access_token\n\n  if (_token){\n    dispatch({\n      type:\"SET_TOKEN\",\n      token:_token\n    })\n    \n    \n   spotify.setAccessToken(_token)\n    spotify.getMe().then(user =>{\n      \n      dispatch({\n        type:\"SET_USER\",\n        user:user\n      })\n\n    }\n    )\n    spotify.getPlaylist(\"6bHi7io5Tgl8GXofNYnAvx\").then(response =>{\n      console.log(response)\n      dispatch({\n        type:\"SET_DISCOVER_WEEKLY\",\n        discover_weekly:response\n      })\n\n    }\n    )\n    \n    spotify.getMyTopArtists().then((response) =>\n    dispatch({\n      type: \"SET_TOP_ARTISTS\",\n      top_artists: response,\n    })\n  );\n  dispatch({\n    type: \"SET_SPOTIFY\",\n    spotify: spotify,\n  });\n\n    spotify.getUserPlaylists().then((playlists) => {\n      dispatch({\n        type: \"SET_PLAYLISTS\",\n        playlists,\n      });\n    });\n  }\n  }, []); \n  console.log(user)\n  console.log(token)\n  console.log(playlists)\n  console.log(discover_weekly)\n  return (\n    \n    <div className=\"App\">\n      {\n      token ? \n      \n<Player spotify={spotify} discover_weekly={discover_weekly}/> :\n <Login/>\n    }\n   \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState={\r\n    user:null,\r\n    playlists:[],\r\n    playing:false,\r\n    discover_weekly: null,\r\n    top_artists: null,\r\n  playing: false,\r\n  item: null,\r\n  spotify:null,\r\n     //  token:\"BQAcpHRqJWZRnEO_GdGYWc8V8IQYPIJDezdeWYUqAB2qUleplANfErbbTBSTjZMEl7BE55vpnyTq7NUbMSenR7TydtBJuLCBGP2YGboyx03m3XEiHzBXTVNHutdM3SnUIj5ExeYVtg6wvyVmsIoB0pNiCwyEwDbS6vJT3GopvajxGf-m\"\r\n}\r\n\r\n\r\n\r\nconst reducer= (state, action) => {\r\n    switch (action.type){\r\n        case \"SET_USER\":\r\n        return{\r\n            ...state,\r\n            user:action.user,\r\n        }\r\n        case \"SET_DISCOVER_WEEKLY\":\r\n      return {\r\n        ...state,\r\n        discover_weekly: action.discover_weekly,\r\n      };\r\n      case \"SET_TOP_ARTISTS\":\r\n      return {\r\n        ...state,\r\n        top_artists: action.top_artists,\r\n      };\r\n      case \"SET_SPOTIFY\":\r\n        return {\r\n          ...state,\r\n          spotify: action.spotify,\r\n        };\r\n        case \"SET_ITEM\":\r\n            return {\r\n              ...state,\r\n              item: action.item,\r\n            };\r\n            case \"SET_PLAYING\":\r\n                return {\r\n                  ...state,\r\n                  playing: action.playing,\r\n                };\r\n        case \"SET_TOKEN\":\r\n        return{\r\n            ...state,\r\n            token:action.token,\r\n        }\r\n        case \"SET_PLAYLISTS\":\r\n        return{\r\n            ...state,\r\n            playlists:action.playlists,\r\n        } \r\n        default:\r\n            return state;\r\n    }\r\n} \r\n\r\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {DataLayer} from './DataLayer'\nimport reducer,{initialState} from './reducer'\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n    <App />\n    </DataLayer>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}